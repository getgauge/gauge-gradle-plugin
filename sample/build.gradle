import org.gauge.gradle.GaugeTask

plugins {
    id 'java'
    id 'jvm-test-suite'
    id 'org.gauge'
    id 'pmd'
}

repositories {
    mavenLocal()
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

pmd {
    consoleOutput = true
}

sourceSets {
    spec {
        java.srcDirs('src/spec/')
    }
    test {
        compileClasspath += sourceSets.spec.runtimeClasspath
        runtimeClasspath += sourceSets.spec.runtimeClasspath
    }
}

dependencies {
    testImplementation 'com.thoughtworks.gauge:gauge-java:+'
    testImplementation("org.junit.jupiter:junit-jupiter:5.+")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

tasks.register('cleanBuildDir', Delete) {
    delete "${projectDir}/logs"
    delete "${projectDir}/out"
    delete "${projectDir}/reports"
}
tasks.clean.dependsOn("cleanBuildDir")

gauge {
    specsDir = 'specs'
    inParallel = true
    nodes = 4
    additionalFlags = '--verbose'
}

tasks.register('gaugeDev', GaugeTask) {
    doFirst {
        gauge {
            specsDir = 'specs'
            inParallel = true
            nodes = 2
            env = 'dev'
            additionalFlags = '--verbose'
        }
    }
}

tasks.register('gaugeDevRepeat', GaugeTask) {
    dependsOn("gaugeDev")
    doFirst {
        gauge {
            additionalFlags = '--repeat --simple-console'
        }
    }
}

tasks.withType(Test).configureEach {
    // https://docs.gradle.org/8.2/userguide/upgrading_version_8.html#test_framework_implementation_dependencies
    // Using JUnitPlatform for running tests
    useJUnitPlatform()
}

tasks.withType(GaugeTask).configureEach {
    // https://docs.gradle.org/8.2/userguide/upgrading_version_8.html#test_task_default_classpath
    testClassesDirs = sourceSets.test.output + sourceSets.spec.output
    classpath = sourceSets.test.runtimeClasspath + sourceSets.spec.runtimeClasspath
}